version: '3.4'

services:
  mysql:
    image: mysql:8
    command: --default-authentication-plugin=mysql_native_password --sql_mode=""
    restart: always
    platform: linux/amd64
    profiles: ["backend"]
    ports:
      - '3306:3306'
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_USER=mysql
      - MYSQL_PASSWORD=password
      - MYSQL_DATABASE=saga
    volumes:
      - saga-app-mysql-data:/var/lib/mysql
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
  redis:
    image: redis:6
    restart: always
    profiles: ["backend"]
    ports:
      - '6379:6379'
  zookeeper:
    image: zookeeper
    restart: always
    profiles: ["backend"]
    ports:
      - '2181:2181'
  kafka:
    depends_on:
      - zookeeper
    image: bitnami/kafka:2.6.0
    restart: always
    profiles: ["backend"]
    ports:
      - '9093:9093'
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_DEFAULT_REPLICATION_FACTOR=1
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://0.0.0.0:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://kafka:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  kafka-ui:
    depends_on:
      - kafka
    image: provectuslabs/kafka-ui
    restart: always
    profiles: ["ops"]
    ports:
      - '8080:8080'
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
  dev:
    build:
      context: .
      dockerfile: ./Dockerfile.dev
    profiles: ["dev"]
    command: [air]
    volumes:
      - .:/src
  wire:
    build:
      context: .
      dockerfile: ./Dockerfile.dev
    profiles: ["wire"]
    working_dir: /src/pkg/app
    command: [wire]
    volumes:
      - .:/src
  migrate:
    build:
      context: .
      dockerfile: ./Dockerfile.dev
    profiles: ["migrate"]
    command: ["./scripts/migrate.sh", "up"]
    volumes:
      - .:/src
  swagger:
    build:
      context: .
      dockerfile: ./Dockerfile.dev
    command: ["./scripts/swagger.sh"]
    profiles: ["swagger"]
    volumes:
      - .:/src

volumes:
  saga-app-mysql-data: {}
