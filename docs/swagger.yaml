definitions:
  dto.Trip:
    properties:
      carBookingId:
        type: integer
      carId:
        type: integer
      createdAt:
        type: string
      flightBookingId:
        type: integer
      flightId:
        type: integer
      hotelBookingId:
        type: integer
      hotelId:
        type: integer
      id:
        type: integer
      status:
        type: string
      updatedAt:
        type: string
      userId:
        type: integer
    required:
    - carId
    - flightId
    - hotelId
    - id
    - userId
    type: object
info:
  contact: {}
  description: saga orchestration example api server
  title: Saga API
  version: "0.1"
paths:
  /efs:
    get:
      consumes:
      - application/json
      description: list all files in the given path
      parameters:
      - description: path
        in: query
        name: path
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
      summary: list files
      tags:
      - efs
  /trips:
    get:
      consumes:
      - application/json
      description: list all trips
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.Trip'
            type: array
      summary: list all trips
      tags:
      - trips
    post:
      consumes:
      - application/json
      description: create new trip
      parameters:
      - description: trip id is required
        in: body
        name: trip
        required: true
        schema:
          $ref: '#/definitions/dto.Trip'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Trip'
      summary: create new trip
      tags:
      - trips
  /trips/{trip_id}/recover/backward:
    put:
      consumes:
      - application/json
      description: recover backward
      parameters:
      - description: trip id
        in: path
        name: trip_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Trip'
      summary: recover backward
      tags:
      - trips
  /trips/{trip_id}/recover/forward:
    put:
      consumes:
      - application/json
      description: recover forward
      parameters:
      - description: trip id
        in: path
        name: trip_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Trip'
      summary: recover forward
      tags:
      - trips
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
